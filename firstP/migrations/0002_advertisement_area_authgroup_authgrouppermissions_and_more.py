# Generated by Django 4.1.5 on 2023-02-24 09:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('firstP', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('advertisement_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Advertisement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('area_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoostType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Boost_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BreakType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Break_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brend',
            fields=[
                ('brend_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Brend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('car_id', models.AutoField(primary_key=True, serialize=False)),
                ('length', models.PositiveSmallIntegerField()),
                ('height', models.PositiveSmallIntegerField()),
                ('width', models.PositiveSmallIntegerField()),
                ('wheel_base', models.PositiveSmallIntegerField()),
                ('clearence', models.PositiveSmallIntegerField()),
                ('min_trunk_volume', models.PositiveSmallIntegerField()),
                ('max_trunk_volum', models.PositiveSmallIntegerField()),
                ('fuel_trunk_volume', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weight', models.PositiveSmallIntegerField()),
                ('max_speed', models.PositiveSmallIntegerField()),
                ('to_100_acceleration', models.FloatField()),
                ('fuel_consumption', models.FloatField(blank=True, null=True)),
                ('battery_volume', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarBodyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
                ('count_of_doors', models.PositiveIntegerField()),
                ('count_of_sit_places', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Car_body_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Car_class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Car_drive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'City',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('rgba', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=30)),
                ('hex', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'Color',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=5)),
                ('full_name', models.CharField(max_length=60)),
                ('short_name', models.CharField(blank=True, max_length=30, null=True)),
                ('flag', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'Country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CyllinderArrangement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Cyllinder_arrangement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EcologicalClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Ecological_class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Engine_layout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnginePowerSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Engine_power_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineType',
            fields=[
                ('code', models.CharField(max_length=12, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Engine_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipment_id', models.AutoField(primary_key=True, serialize=False)),
                ('wheel_size', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Equipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Fuel_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('generation_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Generation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('model_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('producer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('logo', models.CharField(blank=True, max_length=200, null=True)),
                ('date_of_found', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Producer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('region_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('code', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.CharField(blank=True, max_length=3000, null=True)),
                ('date', models.DateField()),
                ('comfort_point', models.PositiveIntegerField()),
                ('reliable_point', models.PositiveIntegerField()),
                ('contrallabilty_point', models.PositiveIntegerField()),
                ('safety_point', models.PositiveIntegerField()),
                ('economic_point', models.PositiveIntegerField()),
                ('cross_country_point', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuspensionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Suspension_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transmission',
            fields=[
                ('transmission_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('count_of_gears', models.PositiveIntegerField()),
                ('count_of_clutches', models.PositiveIntegerField()),
                ('has_dry_clutch', models.IntegerField()),
                ('producer_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Transmission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'Transmission_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('frist_name', models.CharField(max_length=30)),
                ('second_name', models.CharField(blank=True, max_length=30, null=True)),
                ('avatar', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Handbook',
        ),
        migrations.AlterModelOptions(
            name='engine',
            options={'managed': False},
        ),
        migrations.CreateModel(
            name='AdvertisementCarPhotos',
            fields=[
                ('advertisement', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.advertisement')),
                ('photo_url', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Advertisement_car_photos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarInAdvertisement',
            fields=[
                ('advertisment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.advertisement')),
                ('color', models.CharField(max_length=20)),
                ('mileage', models.PositiveIntegerField()),
                ('owners_count', models.PositiveIntegerField(blank=True, null=True)),
                ('in_taxi', models.IntegerField(blank=True, null=True)),
                ('date_of_production', models.DateField()),
            ],
            options={
                'db_table': 'Car_in_advertisement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarPhoto',
            fields=[
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.car')),
                ('photo_url', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Car_photo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarTag',
            fields=[
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.car')),
            ],
            options={
                'db_table': 'Car_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentColor',
            fields=[
                ('equipment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.equipment')),
            ],
            options={
                'db_table': 'Equipment_color',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FavouriteAdvertisement',
            fields=[
                ('advertsment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.advertisement')),
            ],
            options={
                'db_table': 'Favourite_advertisement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InteriorMaterial',
            fields=[
                ('equipment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.equipment')),
            ],
            options={
                'db_table': 'Interior_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('advertisement', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.advertisement')),
                ('date', models.DateTimeField()),
                ('prcie', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Price',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewPhoto',
            fields=[
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='firstP.review')),
                ('photo_url', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'Review_photo',
                'managed': False,
            },
        ),
    ]
